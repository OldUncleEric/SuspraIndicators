export { useScriptTriggerConsent, useScriptEventPage, useScriptTriggerElement, useScript, useScriptGoogleAnalytics, useScriptPlausibleAnalytics, useScriptCrisp, useScriptClarity, useScriptCloudflareWebAnalytics, useScriptFathomAnalytics, useScriptMatomoAnalytics, useScriptGoogleTagManager, useScriptGoogleAdsense, useScriptSegment, useScriptMetaPixel, useScriptXPixel, useScriptIntercom, useScriptHotjar, useScriptStripe, useScriptLemonSqueezy, useScriptVimeoPlayer, useScriptYouTubePlayer, useScriptGoogleMaps, useScriptNpm, useScriptUmamiAnalytics, useScriptSnapchatPixel } from '#app/composables/script-stubs';
export { isVue2, isVue3 } from 'vue-demi';
export { defineNuxtLink } from '#app/components/nuxt-link';
export { useNuxtApp, tryUseNuxtApp, defineNuxtPlugin, definePayloadPlugin, useRuntimeConfig, defineAppConfig } from '#app/nuxt';
export { useAppConfig, updateAppConfig } from '#app/config';
export { defineNuxtComponent } from '#app/composables/component';
export { useAsyncData, useLazyAsyncData, useNuxtData, refreshNuxtData, clearNuxtData } from '#app/composables/asyncData';
export { useHydration } from '#app/composables/hydrate';
export { callOnce } from '#app/composables/once';
export { useState, clearNuxtState } from '#app/composables/state';
export { clearError, createError, isNuxtError, showError, useError } from '#app/composables/error';
export { useFetch, useLazyFetch } from '#app/composables/fetch';
export { useCookie, refreshCookie } from '#app/composables/cookie';
export { onPrehydrate, prerenderRoutes, useRequestHeader, useRequestHeaders, useResponseHeader, useRequestEvent, useRequestFetch, setResponseStatus } from '#app/composables/ssr';
export { onNuxtReady } from '#app/composables/ready';
export { preloadComponents, prefetchComponents, preloadRouteComponents } from '#app/composables/preload';
export { abortNavigation, addRouteMiddleware, defineNuxtRouteMiddleware, setPageLayout, navigateTo, useRoute, useRouter } from '#app/composables/router';
export { isPrerendered, loadPayload, preloadPayload, definePayloadReducer, definePayloadReviver } from '#app/composables/payload';
export { useLoadingIndicator } from '#app/composables/loading-indicator';
export { getAppManifest, getRouteRules } from '#app/composables/manifest';
export { reloadNuxtApp } from '#app/composables/chunk';
export { useRequestURL } from '#app/composables/url';
export { usePreviewMode } from '#app/composables/preview';
export { useRouteAnnouncer } from '#app/composables/route-announcer';
export { useRuntimeHook } from '#app/composables/runtime-hook';
export { useHead, useHeadSafe, useServerHeadSafe, useServerHead, useSeoMeta, useServerSeoMeta, injectHead } from '#app/composables/head';
export { onBeforeRouteLeave, onBeforeRouteUpdate, useLink } from 'vue-router';
export { withCtx, withDirectives, withKeys, withMemo, withModifiers, withScopeId, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, computed, customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref, watch, watchEffect, watchPostEffect, watchSyncEffect, isShallow, effect, effectScope, getCurrentScope, onScopeDispose, defineComponent, defineAsyncComponent, resolveComponent, getCurrentInstance, h, inject, hasInjectionContext, nextTick, provide, mergeModels, toValue, useModel, useAttrs, useCssModule, useCssVars, useSlots, useTransitionState, useId, useTemplateRef, useShadowRoot, Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue';
export { requestIdleCallback, cancelIdleCallback } from '#app/compat/idle-callback';
export { setInterval } from '#app/compat/interval';
export { useAssessment } from '../composables/useAssessment';
export { useAssessmentStarted } from '../composables/useAssessmentStarted';
export { useCommunityFormulas } from '../composables/useCommunityFormulas';
export { useCommunityIndicators } from '../composables/useCommunityIndicators';
export { useCommunityScore } from '../composables/useCommunityScore';
export { useCommunityStarted } from '../composables/useCommunityStarted';
export { useEnergyFormulas } from '../composables/useEnergyFormulas';
export { useEnergyIndicators } from '../composables/useEnergyIndicators';
export { useEnergyScore } from '../composables/useEnergyScore';
export { useEnergyStarted } from '../composables/useEnergyStarted';
export { useFindFormulas, FoundFormulas } from '../composables/useFindFormulas';
export { useFoodFormulas } from '../composables/useFoodFormulas';
export { useFoodIndicators } from '../composables/useFoodIndicators';
export { useFoodScore } from '../composables/useFoodScore';
export { useFoodStarted } from '../composables/useFoodStarted';
export { useGoodsFormulas } from '../composables/useGoodsFormulas';
export { useGoodsIndicators } from '../composables/useGoodsIndicators';
export { useGoodsScore } from '../composables/useGoodsScore';
export { useGoodsStarted } from '../composables/useGoodsStarted';
export { useHabitatFormulas } from '../composables/useHabitatFormulas';
export { useHabitatIndicators } from '../composables/useHabitatIndicators';
export { useHabitatScore } from '../composables/useHabitatScore';
export { useHabitatStarted } from '../composables/useHabitatStarted';
export { useMovementFormulas } from '../composables/useMovementFormulas';
export { useMovementIndicators } from '../composables/useMovementIndicators';
export { useMovementScore } from '../composables/useMovementScore';
export { useMovementStarted } from '../composables/useMovementStarted';
export { useWaterFormulas } from '../composables/useWaterFormulas';
export { useWaterIndicators } from '../composables/useWaterIndicators';
export { useWaterScore } from '../composables/useWaterScore';
export { useWaterStarted } from '../composables/useWaterStarted';
export { generateAssessmentKey, PhysicalAddress, Assessment } from '../utils/assessment';
export { defaultBinnedParameters, createBinnedProps, binned, BinnedComparison, BinnedBins, BinnedParameters, BinnedProps } from '../utils/binned';
export { defaultCommunityIndicators, defaultCommunityFormulas, communityStarted, communityScore, communityFormulasAsList, KnowledgeTest, CommunityIndicators, CommunityFormulas } from '../utils/community';
export { defaultEnergyIndicators, defaultEnergyFormulas, energyStarted, energyScore, energyFormulasAsList, EnergyIndicators, EnergyFormulas } from '../utils/energy';
export { defaultFoodIndicators, defaultFoodFormulas, foodScore, foodFormulasAsList, FoodIndicators, FoodFormulas } from '../utils/food';
export { contribution, defaultFormulaParameters, generateFormulaKey, FormulaCalculation, FormulaCalculationProps, FormulaParameters, Formula, PathwayFormulas, GenericFormulaCalculationProps, IndicatorFormula, IndicatorFormulas } from '../utils/formula';
export { defaultGoodsIndicators, defaultGoodsFormulas, goodsStarted, goodsScore, goodsFormulasAsList, GoodsIndicators, GoodsFormulas } from '../utils/goods';
export { defaultHabitatIndicators, defaultHabitatFormulas, habitatStarted, habitatScore, habitatFormulasAsList, HabitatIndicators, HabitatFormulas } from '../utils/habitat';
export { defaultLinearScaleClampedParameters, createLinearScaleClampedProps, linearScaleClamped, LinearScaleClampedParameters, LinearScaleClampedProps } from '../utils/linearScaleClamped';
export { defaultMovementIndicators, defaultMovementFormulas, movementStarted, movementScore, movementFormulasAsList, MovementIndicators, MovementFormulas } from '../utils/movement';
export { loadAssessment, loadFormulas, loadIndicators, saveAssessment, saveFormula, saveIndicators } from '../utils/storage';
export { default as suspraScore } from '../utils/suspraScore';
export { defaultWaterIndicators, defaultWaterFormulas, waterStarted, waterScore, waterFormulasAsList, WaterIndicators, WaterFormulas } from '../utils/water';
export { useNuxtDevTools } from '../node_modules/@nuxt/devtools/dist/runtime/use-nuxt-devtools';
export { definePageMeta } from '../node_modules/nuxt/dist/pages/runtime/composables';